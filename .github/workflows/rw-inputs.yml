name: Reusable Workflow Input Examples

on: 
  workflow_call:
    inputs:
      json-key-value-pairs:
        required: true
        description: "JSON formatted key value pairs."
        type: string
      yaml-key-value-pairs:
        required: true
        description: "YAML formatted key value pairs."
        type: string

jobs:
  json-kvp:
    runs-on: ubuntu-latest
    container: 
      image: mattwiley/ubuntu:latest
      options: --user root
    steps:
      - name: Setup 
        run: |
          apt-get update
          apt-get install -yq --no-install-recommends jq
      - name: Print as JSON
        run: |
          echo ${{ toJSON(inputs.json-key-value-pairs) }} | jq

  json-via-yaml-kvp:
    runs-on: ubuntu-latest
    container:
      image: mattwiley/github_actions:python3.9-slim
      options: --user root
    outputs:
      kvps: ${{ steps.tx-to-json.outputs.kvp-as-json }}
    steps:
      - name: Setup
        run: pip install PyYaml
      - name: Print as JSON
        id: tx-to-json
        shell: python
        run: |
          import json, yaml, re 
          input = "${{ fromJSON(inputs.json-key-value-pairs) }}"
          print("set-output name=kvp-as-json::" + json.dumps(yaml.load(input, yaml.SafeLoader)))

  yaml-kvp:
    runs-on: ubuntu-latest
    container:
      image: mattwiley/github_actions:python3.9-slim
      options: --user root
    outputs:
      kvps: ${{ steps.tx-to-json.outputs.kvp-as-json }}
    steps:
      - name: Setup
        run: pip install PyYaml
      - name: Print as JSON
        id: tx-to-json
        shell: python
        run: |
          import json, yaml
          print("set-output name=kvp-as-json::" + json.dumps(yaml.load("${{ inputs.yaml-key-value-pairs }}", yaml.SafeLoader)))

